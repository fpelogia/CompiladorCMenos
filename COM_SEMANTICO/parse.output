Terminals unused in grammar

    COMENT
    ENTER
    ERRO
    FIMARQ
    ESPACO


State 101 conflicts: 1 shift/reduce


Grammar

    0 $accept: programa $end

    1 programa: decl_lista

    2 decl_lista: decl_lista decl
    3           | decl

    4 decl: var_decl
    5     | fun_decl

    6 $@1: %empty

    7 var_decl: tipo_esp ID $@1 PVIRG

    8 $@2: %empty

    9 var_decl: tipo_esp ID $@2 ABRECOL NUM FECHACOL PVIRG

   10 tipo_esp: INT
   11         | VOID

   12 $@3: %empty

   13 fun_decl: tipo_esp ID $@3 ABREPAR params FECHAPAR bloco_decl

   14 params: param_lista
   15       | VOID

   16 param_lista: param_lista VIRG param
   17            | param

   18 param: tipo_esp ID

   19 $@4: %empty

   20 param: tipo_esp ID $@4 ABRECOL FECHACOL

   21 bloco_decl: ABRECH local_decl stmt_lista FECHACH

   22 local_decl: local_decl var_decl
   23           | %empty

   24 stmt_lista: stmt_lista stmt
   25           | %empty

   26 stmt: exp_decl
   27     | bloco_decl
   28     | sel_decl
   29     | iter_decl
   30     | ret_decl

   31 exp_decl: exp PVIRG
   32         | PVIRG

   33 sel_decl: IF ABREPAR exp FECHAPAR stmt
   34         | IF ABREPAR exp FECHAPAR stmt ELSE stmt

   35 iter_decl: WHILE ABREPAR exp FECHAPAR stmt

   36 ret_decl: RETURN PVIRG
   37         | RETURN exp PVIRG

   38 exp: var IGUAL exp
   39    | simples_exp

   40 var: ID

   41 $@5: %empty

   42 var: ID $@5 ABRECOL exp FECHACOL

   43 simples_exp: soma_exp relacional soma_exp
   44            | soma_exp

   45 relacional: MENIGUAL
   46           | MENOR
   47           | MAIOR
   48           | MAIIGUAL
   49           | IGUALIGUAL
   50           | DIF

   51 soma_exp: soma_exp soma termo
   52         | termo

   53 soma: MAIS
   54     | MENOS

   55 termo: termo mult fator
   56      | fator

   57 mult: VEZES
   58     | DIV

   59 fator: ABREPAR exp FECHAPAR
   60      | var
   61      | ativacao
   62      | NUM

   63 $@6: %empty

   64 ativacao: ID $@6 ABREPAR args FECHAPAR

   65 args: arg_lista
   66     | %empty

   67 arg_lista: arg_lista VIRG exp
   68          | param
   69          | exp


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    IF (258) 33 34
    ELSE (259) 34
    WHILE (260) 35
    RETURN (261) 36 37
    INT (262) 10
    VOID (263) 11 15
    ID (264) 7 9 13 18 20 40 42 64
    NUM (265) 9 62
    IGUAL (266) 38
    IGUALIGUAL (267) 49
    DIF (268) 50
    MENOR (269) 46
    MAIOR (270) 47
    MENIGUAL (271) 45
    MAIIGUAL (272) 48
    MAIS (273) 53
    MENOS (274) 54
    VEZES (275) 57
    DIV (276) 58
    ABREPAR (277) 13 33 34 35 59 64
    FECHAPAR (278) 13 33 34 35 59 64
    PVIRG (279) 7 9 31 32 36 37
    VIRG (280) 16 67
    ABRECOL (281) 9 20 42
    FECHACOL (282) 9 20 42
    ABRECH (283) 21
    FECHACH (284) 21
    COMENT (285)
    ENTER (286)
    ERRO (287)
    FIMARQ (288)
    ESPACO (289)


Nonterminals, with rules where they appear

    $accept (35)
        on left: 0
    programa (36)
        on left: 1
        on right: 0
    decl_lista (37)
        on left: 2 3
        on right: 1 2
    decl (38)
        on left: 4 5
        on right: 2 3
    var_decl (39)
        on left: 7 9
        on right: 4 22
    $@1 (40)
        on left: 6
        on right: 7
    $@2 (41)
        on left: 8
        on right: 9
    tipo_esp (42)
        on left: 10 11
        on right: 7 9 13 18 20
    fun_decl (43)
        on left: 13
        on right: 5
    $@3 (44)
        on left: 12
        on right: 13
    params (45)
        on left: 14 15
        on right: 13
    param_lista (46)
        on left: 16 17
        on right: 14 16
    param (47)
        on left: 18 20
        on right: 16 17 68
    $@4 (48)
        on left: 19
        on right: 20
    bloco_decl (49)
        on left: 21
        on right: 13 27
    local_decl (50)
        on left: 22 23
        on right: 21 22
    stmt_lista (51)
        on left: 24 25
        on right: 21 24
    stmt (52)
        on left: 26 27 28 29 30
        on right: 24 33 34 35
    exp_decl (53)
        on left: 31 32
        on right: 26
    sel_decl (54)
        on left: 33 34
        on right: 28
    iter_decl (55)
        on left: 35
        on right: 29
    ret_decl (56)
        on left: 36 37
        on right: 30
    exp (57)
        on left: 38 39
        on right: 31 33 34 35 37 38 42 59 67 69
    var (58)
        on left: 40 42
        on right: 38 60
    $@5 (59)
        on left: 41
        on right: 42
    simples_exp (60)
        on left: 43 44
        on right: 39
    relacional (61)
        on left: 45 46 47 48 49 50
        on right: 43
    soma_exp (62)
        on left: 51 52
        on right: 43 44 51
    soma (63)
        on left: 53 54
        on right: 51
    termo (64)
        on left: 55 56
        on right: 51 52 55
    mult (65)
        on left: 57 58
        on right: 55
    fator (66)
        on left: 59 60 61 62
        on right: 55 56
    ativacao (67)
        on left: 64
        on right: 61
    $@6 (68)
        on left: 63
        on right: 64
    args (69)
        on left: 65 66
        on right: 64
    arg_lista (70)
        on left: 67 68 69
        on right: 65 67


State 0

    0 $accept: . programa $end

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    programa    go to state 3
    decl_lista  go to state 4
    decl        go to state 5
    var_decl    go to state 6
    tipo_esp    go to state 7
    fun_decl    go to state 8


State 1

   10 tipo_esp: INT .

    $default  reduce using rule 10 (tipo_esp)


State 2

   11 tipo_esp: VOID .

    $default  reduce using rule 11 (tipo_esp)


State 3

    0 $accept: programa . $end

    $end  shift, and go to state 9


State 4

    1 programa: decl_lista .
    2 decl_lista: decl_lista . decl

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    $default  reduce using rule 1 (programa)

    decl      go to state 10
    var_decl  go to state 6
    tipo_esp  go to state 7
    fun_decl  go to state 8


State 5

    3 decl_lista: decl .

    $default  reduce using rule 3 (decl_lista)


State 6

    4 decl: var_decl .

    $default  reduce using rule 4 (decl)


State 7

    7 var_decl: tipo_esp . ID $@1 PVIRG
    9         | tipo_esp . ID $@2 ABRECOL NUM FECHACOL PVIRG
   13 fun_decl: tipo_esp . ID $@3 ABREPAR params FECHAPAR bloco_decl

    ID  shift, and go to state 11


State 8

    5 decl: fun_decl .

    $default  reduce using rule 5 (decl)


State 9

    0 $accept: programa $end .

    $default  accept


State 10

    2 decl_lista: decl_lista decl .

    $default  reduce using rule 2 (decl_lista)


State 11

    7 var_decl: tipo_esp ID . $@1 PVIRG
    9         | tipo_esp ID . $@2 ABRECOL NUM FECHACOL PVIRG
   13 fun_decl: tipo_esp ID . $@3 ABREPAR params FECHAPAR bloco_decl

    ABREPAR   reduce using rule 12 ($@3)
    ABRECOL   reduce using rule 8 ($@2)
    $default  reduce using rule 6 ($@1)

    $@1  go to state 12
    $@2  go to state 13
    $@3  go to state 14


State 12

    7 var_decl: tipo_esp ID $@1 . PVIRG

    PVIRG  shift, and go to state 15


State 13

    9 var_decl: tipo_esp ID $@2 . ABRECOL NUM FECHACOL PVIRG

    ABRECOL  shift, and go to state 16


State 14

   13 fun_decl: tipo_esp ID $@3 . ABREPAR params FECHAPAR bloco_decl

    ABREPAR  shift, and go to state 17


State 15

    7 var_decl: tipo_esp ID $@1 PVIRG .

    $default  reduce using rule 7 (var_decl)


State 16

    9 var_decl: tipo_esp ID $@2 ABRECOL . NUM FECHACOL PVIRG

    NUM  shift, and go to state 18


State 17

   13 fun_decl: tipo_esp ID $@3 ABREPAR . params FECHAPAR bloco_decl

    INT   shift, and go to state 1
    VOID  shift, and go to state 19

    tipo_esp     go to state 20
    params       go to state 21
    param_lista  go to state 22
    param        go to state 23


State 18

    9 var_decl: tipo_esp ID $@2 ABRECOL NUM . FECHACOL PVIRG

    FECHACOL  shift, and go to state 24


State 19

   11 tipo_esp: VOID .
   15 params: VOID .

    FECHAPAR  reduce using rule 15 (params)
    $default  reduce using rule 11 (tipo_esp)


State 20

   18 param: tipo_esp . ID
   20      | tipo_esp . ID $@4 ABRECOL FECHACOL

    ID  shift, and go to state 25


State 21

   13 fun_decl: tipo_esp ID $@3 ABREPAR params . FECHAPAR bloco_decl

    FECHAPAR  shift, and go to state 26


State 22

   14 params: param_lista .
   16 param_lista: param_lista . VIRG param

    VIRG  shift, and go to state 27

    $default  reduce using rule 14 (params)


State 23

   17 param_lista: param .

    $default  reduce using rule 17 (param_lista)


State 24

    9 var_decl: tipo_esp ID $@2 ABRECOL NUM FECHACOL . PVIRG

    PVIRG  shift, and go to state 28


State 25

   18 param: tipo_esp ID .
   20      | tipo_esp ID . $@4 ABRECOL FECHACOL

    ABRECOL   reduce using rule 19 ($@4)
    $default  reduce using rule 18 (param)

    $@4  go to state 29


State 26

   13 fun_decl: tipo_esp ID $@3 ABREPAR params FECHAPAR . bloco_decl

    ABRECH  shift, and go to state 30

    bloco_decl  go to state 31


State 27

   16 param_lista: param_lista VIRG . param

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    tipo_esp  go to state 20
    param     go to state 32


State 28

    9 var_decl: tipo_esp ID $@2 ABRECOL NUM FECHACOL PVIRG .

    $default  reduce using rule 9 (var_decl)


State 29

   20 param: tipo_esp ID $@4 . ABRECOL FECHACOL

    ABRECOL  shift, and go to state 33


State 30

   21 bloco_decl: ABRECH . local_decl stmt_lista FECHACH

    $default  reduce using rule 23 (local_decl)

    local_decl  go to state 34


State 31

   13 fun_decl: tipo_esp ID $@3 ABREPAR params FECHAPAR bloco_decl .

    $default  reduce using rule 13 (fun_decl)


State 32

   16 param_lista: param_lista VIRG param .

    $default  reduce using rule 16 (param_lista)


State 33

   20 param: tipo_esp ID $@4 ABRECOL . FECHACOL

    FECHACOL  shift, and go to state 35


State 34

   21 bloco_decl: ABRECH local_decl . stmt_lista FECHACH
   22 local_decl: local_decl . var_decl

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    $default  reduce using rule 25 (stmt_lista)

    var_decl    go to state 36
    tipo_esp    go to state 37
    stmt_lista  go to state 38


State 35

   20 param: tipo_esp ID $@4 ABRECOL FECHACOL .

    $default  reduce using rule 20 (param)


State 36

   22 local_decl: local_decl var_decl .

    $default  reduce using rule 22 (local_decl)


State 37

    7 var_decl: tipo_esp . ID $@1 PVIRG
    9         | tipo_esp . ID $@2 ABRECOL NUM FECHACOL PVIRG

    ID  shift, and go to state 39


State 38

   21 bloco_decl: ABRECH local_decl stmt_lista . FECHACH
   24 stmt_lista: stmt_lista . stmt

    IF       shift, and go to state 40
    WHILE    shift, and go to state 41
    RETURN   shift, and go to state 42
    ID       shift, and go to state 43
    NUM      shift, and go to state 44
    ABREPAR  shift, and go to state 45
    PVIRG    shift, and go to state 46
    ABRECH   shift, and go to state 30
    FECHACH  shift, and go to state 47

    bloco_decl   go to state 48
    stmt         go to state 49
    exp_decl     go to state 50
    sel_decl     go to state 51
    iter_decl    go to state 52
    ret_decl     go to state 53
    exp          go to state 54
    var          go to state 55
    simples_exp  go to state 56
    soma_exp     go to state 57
    termo        go to state 58
    fator        go to state 59
    ativacao     go to state 60


State 39

    7 var_decl: tipo_esp ID . $@1 PVIRG
    9         | tipo_esp ID . $@2 ABRECOL NUM FECHACOL PVIRG

    ABRECOL   reduce using rule 8 ($@2)
    $default  reduce using rule 6 ($@1)

    $@1  go to state 12
    $@2  go to state 13


State 40

   33 sel_decl: IF . ABREPAR exp FECHAPAR stmt
   34         | IF . ABREPAR exp FECHAPAR stmt ELSE stmt

    ABREPAR  shift, and go to state 61


State 41

   35 iter_decl: WHILE . ABREPAR exp FECHAPAR stmt

    ABREPAR  shift, and go to state 62


State 42

   36 ret_decl: RETURN . PVIRG
   37         | RETURN . exp PVIRG

    ID       shift, and go to state 43
    NUM      shift, and go to state 44
    ABREPAR  shift, and go to state 45
    PVIRG    shift, and go to state 63

    exp          go to state 64
    var          go to state 55
    simples_exp  go to state 56
    soma_exp     go to state 57
    termo        go to state 58
    fator        go to state 59
    ativacao     go to state 60


State 43

   40 var: ID .
   42    | ID . $@5 ABRECOL exp FECHACOL
   64 ativacao: ID . $@6 ABREPAR args FECHAPAR

    ABREPAR   reduce using rule 63 ($@6)
    ABRECOL   reduce using rule 41 ($@5)
    $default  reduce using rule 40 (var)

    $@5  go to state 65
    $@6  go to state 66


State 44

   62 fator: NUM .

    $default  reduce using rule 62 (fator)


State 45

   59 fator: ABREPAR . exp FECHAPAR

    ID       shift, and go to state 43
    NUM      shift, and go to state 44
    ABREPAR  shift, and go to state 45

    exp          go to state 67
    var          go to state 55
    simples_exp  go to state 56
    soma_exp     go to state 57
    termo        go to state 58
    fator        go to state 59
    ativacao     go to state 60


State 46

   32 exp_decl: PVIRG .

    $default  reduce using rule 32 (exp_decl)


State 47

   21 bloco_decl: ABRECH local_decl stmt_lista FECHACH .

    $default  reduce using rule 21 (bloco_decl)


State 48

   27 stmt: bloco_decl .

    $default  reduce using rule 27 (stmt)


State 49

   24 stmt_lista: stmt_lista stmt .

    $default  reduce using rule 24 (stmt_lista)


State 50

   26 stmt: exp_decl .

    $default  reduce using rule 26 (stmt)


State 51

   28 stmt: sel_decl .

    $default  reduce using rule 28 (stmt)


State 52

   29 stmt: iter_decl .

    $default  reduce using rule 29 (stmt)


State 53

   30 stmt: ret_decl .

    $default  reduce using rule 30 (stmt)


State 54

   31 exp_decl: exp . PVIRG

    PVIRG  shift, and go to state 68


State 55

   38 exp: var . IGUAL exp
   60 fator: var .

    IGUAL  shift, and go to state 69

    $default  reduce using rule 60 (fator)


State 56

   39 exp: simples_exp .

    $default  reduce using rule 39 (exp)


State 57

   43 simples_exp: soma_exp . relacional soma_exp
   44            | soma_exp .
   51 soma_exp: soma_exp . soma termo

    IGUALIGUAL  shift, and go to state 70
    DIF         shift, and go to state 71
    MENOR       shift, and go to state 72
    MAIOR       shift, and go to state 73
    MENIGUAL    shift, and go to state 74
    MAIIGUAL    shift, and go to state 75
    MAIS        shift, and go to state 76
    MENOS       shift, and go to state 77

    $default  reduce using rule 44 (simples_exp)

    relacional  go to state 78
    soma        go to state 79


State 58

   52 soma_exp: termo .
   55 termo: termo . mult fator

    VEZES  shift, and go to state 80
    DIV    shift, and go to state 81

    $default  reduce using rule 52 (soma_exp)

    mult  go to state 82


State 59

   56 termo: fator .

    $default  reduce using rule 56 (termo)


State 60

   61 fator: ativacao .

    $default  reduce using rule 61 (fator)


State 61

   33 sel_decl: IF ABREPAR . exp FECHAPAR stmt
   34         | IF ABREPAR . exp FECHAPAR stmt ELSE stmt

    ID       shift, and go to state 43
    NUM      shift, and go to state 44
    ABREPAR  shift, and go to state 45

    exp          go to state 83
    var          go to state 55
    simples_exp  go to state 56
    soma_exp     go to state 57
    termo        go to state 58
    fator        go to state 59
    ativacao     go to state 60


State 62

   35 iter_decl: WHILE ABREPAR . exp FECHAPAR stmt

    ID       shift, and go to state 43
    NUM      shift, and go to state 44
    ABREPAR  shift, and go to state 45

    exp          go to state 84
    var          go to state 55
    simples_exp  go to state 56
    soma_exp     go to state 57
    termo        go to state 58
    fator        go to state 59
    ativacao     go to state 60


State 63

   36 ret_decl: RETURN PVIRG .

    $default  reduce using rule 36 (ret_decl)


State 64

   37 ret_decl: RETURN exp . PVIRG

    PVIRG  shift, and go to state 85


State 65

   42 var: ID $@5 . ABRECOL exp FECHACOL

    ABRECOL  shift, and go to state 86


State 66

   64 ativacao: ID $@6 . ABREPAR args FECHAPAR

    ABREPAR  shift, and go to state 87


State 67

   59 fator: ABREPAR exp . FECHAPAR

    FECHAPAR  shift, and go to state 88


State 68

   31 exp_decl: exp PVIRG .

    $default  reduce using rule 31 (exp_decl)


State 69

   38 exp: var IGUAL . exp

    ID       shift, and go to state 43
    NUM      shift, and go to state 44
    ABREPAR  shift, and go to state 45

    exp          go to state 89
    var          go to state 55
    simples_exp  go to state 56
    soma_exp     go to state 57
    termo        go to state 58
    fator        go to state 59
    ativacao     go to state 60


State 70

   49 relacional: IGUALIGUAL .

    $default  reduce using rule 49 (relacional)


State 71

   50 relacional: DIF .

    $default  reduce using rule 50 (relacional)


State 72

   46 relacional: MENOR .

    $default  reduce using rule 46 (relacional)


State 73

   47 relacional: MAIOR .

    $default  reduce using rule 47 (relacional)


State 74

   45 relacional: MENIGUAL .

    $default  reduce using rule 45 (relacional)


State 75

   48 relacional: MAIIGUAL .

    $default  reduce using rule 48 (relacional)


State 76

   53 soma: MAIS .

    $default  reduce using rule 53 (soma)


State 77

   54 soma: MENOS .

    $default  reduce using rule 54 (soma)


State 78

   43 simples_exp: soma_exp relacional . soma_exp

    ID       shift, and go to state 43
    NUM      shift, and go to state 44
    ABREPAR  shift, and go to state 45

    var       go to state 90
    soma_exp  go to state 91
    termo     go to state 58
    fator     go to state 59
    ativacao  go to state 60


State 79

   51 soma_exp: soma_exp soma . termo

    ID       shift, and go to state 43
    NUM      shift, and go to state 44
    ABREPAR  shift, and go to state 45

    var       go to state 90
    termo     go to state 92
    fator     go to state 59
    ativacao  go to state 60


State 80

   57 mult: VEZES .

    $default  reduce using rule 57 (mult)


State 81

   58 mult: DIV .

    $default  reduce using rule 58 (mult)


State 82

   55 termo: termo mult . fator

    ID       shift, and go to state 43
    NUM      shift, and go to state 44
    ABREPAR  shift, and go to state 45

    var       go to state 90
    fator     go to state 93
    ativacao  go to state 60


State 83

   33 sel_decl: IF ABREPAR exp . FECHAPAR stmt
   34         | IF ABREPAR exp . FECHAPAR stmt ELSE stmt

    FECHAPAR  shift, and go to state 94


State 84

   35 iter_decl: WHILE ABREPAR exp . FECHAPAR stmt

    FECHAPAR  shift, and go to state 95


State 85

   37 ret_decl: RETURN exp PVIRG .

    $default  reduce using rule 37 (ret_decl)


State 86

   42 var: ID $@5 ABRECOL . exp FECHACOL

    ID       shift, and go to state 43
    NUM      shift, and go to state 44
    ABREPAR  shift, and go to state 45

    exp          go to state 96
    var          go to state 55
    simples_exp  go to state 56
    soma_exp     go to state 57
    termo        go to state 58
    fator        go to state 59
    ativacao     go to state 60


State 87

   64 ativacao: ID $@6 ABREPAR . args FECHAPAR

    INT      shift, and go to state 1
    VOID     shift, and go to state 2
    ID       shift, and go to state 43
    NUM      shift, and go to state 44
    ABREPAR  shift, and go to state 45

    $default  reduce using rule 66 (args)

    tipo_esp     go to state 20
    param        go to state 97
    exp          go to state 98
    var          go to state 55
    simples_exp  go to state 56
    soma_exp     go to state 57
    termo        go to state 58
    fator        go to state 59
    ativacao     go to state 60
    args         go to state 99
    arg_lista    go to state 100


State 88

   59 fator: ABREPAR exp FECHAPAR .

    $default  reduce using rule 59 (fator)


State 89

   38 exp: var IGUAL exp .

    $default  reduce using rule 38 (exp)


State 90

   60 fator: var .

    $default  reduce using rule 60 (fator)


State 91

   43 simples_exp: soma_exp relacional soma_exp .
   51 soma_exp: soma_exp . soma termo

    MAIS   shift, and go to state 76
    MENOS  shift, and go to state 77

    $default  reduce using rule 43 (simples_exp)

    soma  go to state 79


State 92

   51 soma_exp: soma_exp soma termo .
   55 termo: termo . mult fator

    VEZES  shift, and go to state 80
    DIV    shift, and go to state 81

    $default  reduce using rule 51 (soma_exp)

    mult  go to state 82


State 93

   55 termo: termo mult fator .

    $default  reduce using rule 55 (termo)


State 94

   33 sel_decl: IF ABREPAR exp FECHAPAR . stmt
   34         | IF ABREPAR exp FECHAPAR . stmt ELSE stmt

    IF       shift, and go to state 40
    WHILE    shift, and go to state 41
    RETURN   shift, and go to state 42
    ID       shift, and go to state 43
    NUM      shift, and go to state 44
    ABREPAR  shift, and go to state 45
    PVIRG    shift, and go to state 46
    ABRECH   shift, and go to state 30

    bloco_decl   go to state 48
    stmt         go to state 101
    exp_decl     go to state 50
    sel_decl     go to state 51
    iter_decl    go to state 52
    ret_decl     go to state 53
    exp          go to state 54
    var          go to state 55
    simples_exp  go to state 56
    soma_exp     go to state 57
    termo        go to state 58
    fator        go to state 59
    ativacao     go to state 60


State 95

   35 iter_decl: WHILE ABREPAR exp FECHAPAR . stmt

    IF       shift, and go to state 40
    WHILE    shift, and go to state 41
    RETURN   shift, and go to state 42
    ID       shift, and go to state 43
    NUM      shift, and go to state 44
    ABREPAR  shift, and go to state 45
    PVIRG    shift, and go to state 46
    ABRECH   shift, and go to state 30

    bloco_decl   go to state 48
    stmt         go to state 102
    exp_decl     go to state 50
    sel_decl     go to state 51
    iter_decl    go to state 52
    ret_decl     go to state 53
    exp          go to state 54
    var          go to state 55
    simples_exp  go to state 56
    soma_exp     go to state 57
    termo        go to state 58
    fator        go to state 59
    ativacao     go to state 60


State 96

   42 var: ID $@5 ABRECOL exp . FECHACOL

    FECHACOL  shift, and go to state 103


State 97

   68 arg_lista: param .

    $default  reduce using rule 68 (arg_lista)


State 98

   69 arg_lista: exp .

    $default  reduce using rule 69 (arg_lista)


State 99

   64 ativacao: ID $@6 ABREPAR args . FECHAPAR

    FECHAPAR  shift, and go to state 104


State 100

   65 args: arg_lista .
   67 arg_lista: arg_lista . VIRG exp

    VIRG  shift, and go to state 105

    $default  reduce using rule 65 (args)


State 101

   33 sel_decl: IF ABREPAR exp FECHAPAR stmt .
   34         | IF ABREPAR exp FECHAPAR stmt . ELSE stmt

    ELSE  shift, and go to state 106

    ELSE      [reduce using rule 33 (sel_decl)]
    $default  reduce using rule 33 (sel_decl)


State 102

   35 iter_decl: WHILE ABREPAR exp FECHAPAR stmt .

    $default  reduce using rule 35 (iter_decl)


State 103

   42 var: ID $@5 ABRECOL exp FECHACOL .

    $default  reduce using rule 42 (var)


State 104

   64 ativacao: ID $@6 ABREPAR args FECHAPAR .

    $default  reduce using rule 64 (ativacao)


State 105

   67 arg_lista: arg_lista VIRG . exp

    ID       shift, and go to state 43
    NUM      shift, and go to state 44
    ABREPAR  shift, and go to state 45

    exp          go to state 107
    var          go to state 55
    simples_exp  go to state 56
    soma_exp     go to state 57
    termo        go to state 58
    fator        go to state 59
    ativacao     go to state 60


State 106

   34 sel_decl: IF ABREPAR exp FECHAPAR stmt ELSE . stmt

    IF       shift, and go to state 40
    WHILE    shift, and go to state 41
    RETURN   shift, and go to state 42
    ID       shift, and go to state 43
    NUM      shift, and go to state 44
    ABREPAR  shift, and go to state 45
    PVIRG    shift, and go to state 46
    ABRECH   shift, and go to state 30

    bloco_decl   go to state 48
    stmt         go to state 108
    exp_decl     go to state 50
    sel_decl     go to state 51
    iter_decl    go to state 52
    ret_decl     go to state 53
    exp          go to state 54
    var          go to state 55
    simples_exp  go to state 56
    soma_exp     go to state 57
    termo        go to state 58
    fator        go to state 59
    ativacao     go to state 60


State 107

   67 arg_lista: arg_lista VIRG exp .

    $default  reduce using rule 67 (arg_lista)


State 108

   34 sel_decl: IF ABREPAR exp FECHAPAR stmt ELSE stmt .

    $default  reduce using rule 34 (sel_decl)
